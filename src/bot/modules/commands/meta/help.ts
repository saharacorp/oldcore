<<<<<<< HEAD
// PlutoCore - src/bot/modules/commands/help.ts
// Written by Sam - https://quinnlane.dev/

import { Command } from 'discord-akairo'
import { Message } from 'discord.js'
import { genEmbed } from '../../utilities/EmbedGenerator'
import config from '../../../../configuration/config'
import { log, loggerType } from '../../../../oob_modules/cli/logger'

export default class HelpCommand extends Command {
  constructor () {
    super('help', {
      aliases: [
        'help',
        'commands'
      ],
      category: 'Meta',
      description: {
        content: 'Gets a list of all commands',
        usage: 'help [command]',
        examples: [
          'help',
          'help info',
          'commands ping'
        ]
      },
      args: [
        {
          type: 'commandAlias',
          id: 'command',
          default: null
        }
      ]
    })
  }

  async exec (message: Message, { command }: { command: Command }): Promise<Message> {
    if (command) {
    	let commUsage: boolean
    	commUsage = !(command.description.usage === undefined || '')

      let aliases: string[] = []
      for (let i = 0; i < command.aliases.length; i++) {
        if (command.aliases[i] !== command.id) aliases = [...aliases, command.aliases[i]]
      }

      let aliasUsage: boolean
      aliasUsage = aliases.length !== 0

      return await message.channel.send(genEmbed({
        title: ':question: Help',
        description: `Showing help details for the **${command}** command`,
        author: {
        	name: config.bot.personalization.embed.name,
          image: config.bot.personalization.embed.image,
          link: config.bot.personalization.embed.link
        },
        footer: {
        	text: `Generated by ${message.author.tag}`,
          image: message.author.displayAvatarURL({ dynamic: true })
        },
        timestamp: true,
        color: config.bot.personalization.embed.defaultColors.normal,
        fields: [
          {
            name: 'Description',
            value: command.description.content || 'No description provided',
            inline: true
          },
          {
            name: 'Usage',
            value: commUsage ? config.bot.prefix + command.description.usage : 'No usage specified',
            inline: true
          },
          {
            name: 'Examples',
            value: command.description.examples ? command.description.examples.map(e => ` \- \`${config.bot.prefix}${e}\``) : 'No examples given',
            inline: true
          },
          {
            name: 'Aliases',
            value: aliasUsage ? aliases.map(a => ` \- ${config.bot.prefix}${a}`) : 'No aliases for this command',
            inline: true
          }
        ]
      }))
    } else {
      const helpEmbed = genEmbed({
        title: ':question: Help',
        description: 'Showing a list of all commands',
        author: {
          name: config.bot.personalization.embed.name,
          image: config.bot.personalization.embed.image,
          link: config.bot.personalization.embed.link
        },
        footer: {
          text: `Generated by ${message.author.tag}`,
          image: message.author.displayAvatarURL({ dynamic: true })
        },
        timestamp: true,
        color: config.bot.personalization.embed.defaultColors.normal
      })

      for (const catagory of this.handler.categories.values()) {
        if (['default'].includes(catagory.id)) continue

        helpEmbed.addField(catagory.id, catagory
          .filter(cmd => cmd.aliases.length > 0)
          .map(cmd => `**\`${config.bot.prefix}${cmd}\`**`)
          .join(', ') || 'No commands in this category'
        )
      }

      return await message.channel.send(helpEmbed)
    }
  }
}
=======
// PlutoCore - src/bot/modules/commands/help.ts
// Written by Quinn Lane - https://brndnln.dev/

import { Command } from 'discord-akairo'
import { Message } from 'discord.js'
import { genEmbed } from '../../utilities/EmbedGenerator'
import config from '../../../../configuration/config'
import { log, loggerType } from '../../../../oob_modules/cli/logger'

export default class HelpCommand extends Command {
  constructor () {
    super('help', {
      aliases: [
        'help',
        'commands'
      ],
      category: 'Meta',
      description: {
        content: 'Gets a list of all commands',
        usage: 'help [command]',
        examples: [
          'help',
          'help info',
          'commands ping'
        ]
      },
      args: [
        {
          type: 'commandAlias',
          id: 'command',
          default: null
        }
      ]
    })
  }

  async exec (message: Message, { command }: { command: Command }): Promise<Message> {
    if (command) {
    	let commUsage: boolean
    	commUsage = !(command.description.usage === undefined || '')

      let aliases: string[] = []
      for (let i = 0; i < command.aliases.length; i++) {
        if (command.aliases[i] !== command.id) aliases = [...aliases, command.aliases[i]]
      }

      let aliasUsage: boolean
      aliasUsage = aliases.length !== 0

      return await message.channel.send(genEmbed({
        title: ':question: Help',
        description: `Showing help details for the **${command}** command`,
        author: {
        	name: config.bot.personalization.embed.name,
          image: config.bot.personalization.embed.image,
          link: config.bot.personalization.embed.link
        },
        footer: {
        	text: `Generated by ${message.author.tag}`,
          image: message.author.displayAvatarURL({ dynamic: true })
        },
        timestamp: true,
        color: config.bot.personalization.embed.defaultColors.normal,
        fields: [
          {
            name: 'Description',
            value: command.description.content || 'No description provided',
            inline: true
          },
          {
            name: 'Usage',
            value: commUsage ? config.bot.prefix + command.description.usage : 'No usage specified',
            inline: true
          },
          {
            name: 'Examples',
            value: command.description.examples ? command.description.examples.map(e => ` \- \`${config.bot.prefix}${e}\``) : 'No examples given',
            inline: true
          },
          {
            name: 'Aliases',
            value: aliasUsage ? aliases.map(a => ` \- ${config.bot.prefix}${a}`) : 'No aliases for this command',
            inline: true
          }
        ]
      }))
    } else {
      const helpEmbed = genEmbed({
        title: ':question: Help',
        description: 'Showing a list of all commands',
        author: {
          name: config.bot.personalization.embed.name,
          image: config.bot.personalization.embed.image,
          link: config.bot.personalization.embed.link
        },
        footer: {
          text: `Generated by ${message.author.tag}`,
          image: message.author.displayAvatarURL({ dynamic: true })
        },
        timestamp: true,
        color: config.bot.personalization.embed.defaultColors.normal
      })

      for (const catagory of this.handler.categories.values()) {
        if (['default'].includes(catagory.id)) continue

        helpEmbed.addField(catagory.id, catagory
          .filter(cmd => cmd.aliases.length > 0)
          .map(cmd => `**\`${config.bot.prefix}${cmd}\`**`)
          .join(', ') || 'No commands in this category'
        )
      }

      return await message.channel.send(helpEmbed)
    }
  }
}
>>>>>>> development
