// PlutoCore - src/bot/modules/commands/pluto.ts
// Written by Sam - https://quinnlane.dev/

import { Command } from 'discord-akairo'
import { genEmbed } from '../../utilities/EmbedGenerator'
import { Embed } from '../../../../oob_modules/interfaces/Interfaces'
import { Message } from 'discord.js'
import config from '../../../../configuration/config'

class PlutoCommand extends Command {
  constructor () {
    super('plutocore', {
      aliases: [
        'plutocore',
        'pluto',
        'mydadtookmypusheen'
      ],
      category: 'Meta',
      description: {
      	content: 'Shows that this bot was built on PlutoCore'
      }
    })
  }

  exec (message: Message): any {
    const plutoEmbed: Embed = {
      title: ':new_moon: Pluto',
      description: 'This bot uses PlutoCore as a framework',
      fields: [
        {
          name: 'What is Pluto and PlutoCore?',
          value: 'PlutoCore is a template for discord bots built on Discord Akairo and Discord.js.\nPluto is a multipurpose discord bot built on PlutoCore'
        },
        {
          name: 'How do I know it is not stealing my V-Bucks?',
          value: 'Sadly, you can\'t. Unless it is an official Pluto bot made by <@422415365742788618>, it is impossible to guarantee that the bot is open source software. If it is an offical bot, it will be oss on [GitHub](https://github.com/quinndoescode/Pluto)',
          inline: true
        },
        {
          name: 'Can I invite Pluto into my own server?',
          value: 'Yes! [Click this to invite me!](https://pluto.rip)',
          inline: true
        }
      ],
      timestamp: true,
      footer: {
        text: `Generated by ${message.author.tag}`,
        image: message.author.displayAvatarURL({ dynamic: true })
      },
      author: {
        name: config.bot.personalization.embed.name,
        link: config.bot.personalization.embed.link,
        image: config.bot.personalization.embed.image
      },
      color: config.bot.personalization.embed.defaultColors.normal
    }

    return message.channel.send(genEmbed(plutoEmbed))
  }
}

export default PlutoCommand
