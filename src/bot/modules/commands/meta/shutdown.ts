<<<<<<< HEAD
// PlutoCore - src/bot/modules/commands/shutdown.ts
// Written by Sam - https://quinnlane.dev/

import { Command } from 'discord-akairo'
import { Message } from 'discord.js'
import { log, loggerType } from '../../../../oob_modules/cli/logger'
import { genEmbed } from '../../utilities/EmbedGenerator'
import ShutdownHandler from '../../utilities/ShutdownHandler'
import config from '../../../../configuration/config'
import { client } from '../../../pluto'
import { getHumanReadableDateTime } from '../../../../oob_modules/misc/jst'

export default class ShutdownCommand extends Command {
  constructor () {
    super('shutdown', {
      aliases: [
        'shutdown',
        'shutdownbot',
        'majorlyfuckoff'
      ],
      ownerOnly: true,
      category: 'Meta',
      description: {
        content: 'Full shutdown of the bot',
        usage: 'shutdown'
      },
      args: [
        {
          id: 'code',
          type: 'string',
          default: '0'
        }
      ]
    })
  }

  async exec (message: Message, args) {
    log(loggerType.INFO, `${message.author.tag} (${message.author.id}) has executed the shutdown command at ${getHumanReadableDateTime()}!`)
    if (message.content.includes('majorlyfuckoff')) {
      await message.channel.send('awww :(')
    }
    await message.channel.send(genEmbed({
      title: ':exclamation: Bot Shutdown',
      description: `The bot is shutting down with code \`${args.code}\`...`,
      color: config.bot.personalization.embed.defaultColors.normal,
      footer: {
        text: `Generated by ${message.author.tag}`,
        image: message.author.displayAvatarURL({ dynamic: true })
      },
      author: {
        name: config.bot.personalization.embed.name,
        link: config.bot.personalization.embed.link,
        image: config.bot.personalization.embed.image
      },
      timestamp: true
    }))
    // @ts-expect-error
    await client.user.setStatus('invisible')
    return ShutdownHandler(args.code)
  }
}
=======
// PlutoCore - src/bot/modules/commands/shutdown.ts
// Written by Quinn Lane - https://brndnln.dev/

import { Command } from 'discord-akairo'
import { Message } from 'discord.js'
import { log, loggerType } from '../../../../oob_modules/cli/logger'
import { genEmbed } from '../../utilities/EmbedGenerator'
import ShutdownHandler from '../../utilities/ShutdownHandler'
import config from '../../../../configuration/config'
import { client } from '../../../pluto'
import { getHumanReadableDateTime } from '../../../../oob_modules/misc/jst'

export default class ShutdownCommand extends Command {
  constructor () {
    super('shutdown', {
      aliases: [
        'shutdown',
        'shutdownbot',
        'majorlyfuckoff'
      ],
      ownerOnly: true,
      category: 'Meta',
      description: {
        content: 'Full shutdown of the bot',
        usage: 'shutdown'
      },
      args: [
        {
          id: 'code',
          type: 'string',
          default: '0'
        }
      ]
    })
  }

  async exec (message: Message, args) {
    log(loggerType.INFO, `${message.author.tag} (${message.author.id}) has executed the shutdown command at ${getHumanReadableDateTime()}!`)
    if (message.content.includes('majorlyfuckoff')) {
      await message.channel.send('awww :(')
    }
    await message.channel.send(genEmbed({
      title: ':exclamation: Bot Shutdown',
      description: `The bot is shutting down with code \`${args.code}\`...`,
      color: config.bot.personalization.embed.defaultColors.normal,
      footer: {
        text: `Generated by ${message.author.tag}`,
        image: message.author.displayAvatarURL({ dynamic: true })
      },
      author: {
        name: config.bot.personalization.embed.name,
        link: config.bot.personalization.embed.link,
        image: config.bot.personalization.embed.image
      },
      timestamp: true
    }))
    // @ts-expect-error
    await client.user.setStatus('invisible')
    return ShutdownHandler(args.code)
  }
}
>>>>>>> development
